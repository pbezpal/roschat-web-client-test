#!groovy

String SERVER_VER="${params.VER}"
String STATUS_SERVER="${params.REZULT}"
String REPORT_SERVER="${params.REPORT}"

properties([disableConcurrentBuilds()])

pipeline{
    agent {
        label ''
    }
    stages{
        stage("Cleaning the build directory"){
            steps{
                deleteDir();
            }
        }
        stage("Cloning from a git repository"){
            steps{
                script{
                    try{
                        git 'ssh://bezpalko_p@10.10.199.35/opt/git/firelink/test-roschat-web-client'
                    }catch(err){
                        currentBuild.result = "FAILURE"
                        error("Error copying from git repository")
                    }
                }
            }
        }
        stage("Testing"){
            steps{
                script{
                    try{
                        sh './gradlew clean testlogin -Dhostserver="testing2.ros.chat" -Dportserver="1110"'
                    }catch(err){
                        currentBuild.result = 'FAILURE' 
                    }
                }
            }
        }
        stage("Report creating"){
            steps{
                allure includeProperties: false, jdk: '', results: [[path: 'build/allure-results']]
            }
        }
    }
    post{
        always{
            script{
                if(params.REZULT == null){
                    emailext body: "Server version testing - ${SERVER_VER} \n Result testing - ${currentBuild.result} \n Report - ${BUILD_URL}allure", subject: 'Roschat server testing', to: 'bezpalko', from: 'jenkins@ros.chat'
                }else{
                    emailext body: "Server version testing - ${SERVER_VER} \n Result testing MS - ${STATUS_SERVER} \n Report - ${REPORT_SERVER} \n \n Result testing web-client - ${currentBuild.result} \n Report - ${BUILD_URL}allure", subject: 'Roschat server testing', to: 'bezpalko', from: 'jenkins@ros.chat'
                }
            }
        }
    }
}